// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpn-struct.proto

package vpn

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthType int32

const (
	AuthType_AT_NONE           AuthType = 0
	AuthType_AT_GOOGLE_OPEN_ID AuthType = 1
	AuthType_AT_AWS_IAM        AuthType = 2
)

var AuthType_name = map[int32]string{
	0: "AT_NONE",
	1: "AT_GOOGLE_OPEN_ID",
	2: "AT_AWS_IAM",
}

var AuthType_value = map[string]int32{
	"AT_NONE":           0,
	"AT_GOOGLE_OPEN_ID": 1,
	"AT_AWS_IAM":        2,
}

func (x AuthType) String() string {
	return proto.EnumName(AuthType_name, int32(x))
}

func (AuthType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{0}
}

type ErrorCode int32

const (
	ErrorCode_EC_UNKNOWN               ErrorCode = 0
	ErrorCode_EC_SUCCESS               ErrorCode = 1
	ErrorCode_EC_INVALID_AUTHORIZATION ErrorCode = 2
	ErrorCode_EC_EXPIRED_JWT           ErrorCode = 3
)

var ErrorCode_name = map[int32]string{
	0: "EC_UNKNOWN",
	1: "EC_SUCCESS",
	2: "EC_INVALID_AUTHORIZATION",
	3: "EC_EXPIRED_JWT",
}

var ErrorCode_value = map[string]int32{
	"EC_UNKNOWN":               0,
	"EC_SUCCESS":               1,
	"EC_INVALID_AUTHORIZATION": 2,
	"EC_EXPIRED_JWT":           3,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{1}
}

type IPPacketType int32

const (
	IPPacketType_IPPT_UNKNOWN    IPPacketType = 0
	IPPacketType_IPPT_RAW        IPPacketType = 1
	IPPacketType_IPPT_VPN_ASSIGN IPPacketType = 2
)

var IPPacketType_name = map[int32]string{
	0: "IPPT_UNKNOWN",
	1: "IPPT_RAW",
	2: "IPPT_VPN_ASSIGN",
}

var IPPacketType_value = map[string]int32{
	"IPPT_UNKNOWN":    0,
	"IPPT_RAW":        1,
	"IPPT_VPN_ASSIGN": 2,
}

func (x IPPacketType) String() string {
	return proto.EnumName(IPPacketType_name, int32(x))
}

func (IPPacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{2}
}

type IPPacket struct {
	ErrorCode            ErrorCode     `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=vpn.ErrorCode" json:"error_code,omitempty"`
	PacketType           IPPacketType  `protobuf:"varint,2,opt,name=packet_type,json=packetType,proto3,enum=vpn.IPPacketType" json:"packet_type,omitempty"`
	Packet1              *IPPacket_Raw `protobuf:"bytes,10,opt,name=packet1,proto3" json:"packet1,omitempty"`
	Packet2              *IPPacket_Vpn `protobuf:"bytes,11,opt,name=packet2,proto3" json:"packet2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IPPacket) Reset()         { *m = IPPacket{} }
func (m *IPPacket) String() string { return proto.CompactTextString(m) }
func (*IPPacket) ProtoMessage()    {}
func (*IPPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{0}
}

func (m *IPPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPPacket.Unmarshal(m, b)
}
func (m *IPPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPPacket.Marshal(b, m, deterministic)
}
func (m *IPPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPPacket.Merge(m, src)
}
func (m *IPPacket) XXX_Size() int {
	return xxx_messageInfo_IPPacket.Size(m)
}
func (m *IPPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_IPPacket.DiscardUnknown(m)
}

var xxx_messageInfo_IPPacket proto.InternalMessageInfo

func (m *IPPacket) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_EC_UNKNOWN
}

func (m *IPPacket) GetPacketType() IPPacketType {
	if m != nil {
		return m.PacketType
	}
	return IPPacketType_IPPT_UNKNOWN
}

func (m *IPPacket) GetPacket1() *IPPacket_Raw {
	if m != nil {
		return m.Packet1
	}
	return nil
}

func (m *IPPacket) GetPacket2() *IPPacket_Vpn {
	if m != nil {
		return m.Packet2
	}
	return nil
}

type IPPacket_Raw struct {
	Raw                  []byte   `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPPacket_Raw) Reset()         { *m = IPPacket_Raw{} }
func (m *IPPacket_Raw) String() string { return proto.CompactTextString(m) }
func (*IPPacket_Raw) ProtoMessage()    {}
func (*IPPacket_Raw) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{0, 0}
}

func (m *IPPacket_Raw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPPacket_Raw.Unmarshal(m, b)
}
func (m *IPPacket_Raw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPPacket_Raw.Marshal(b, m, deterministic)
}
func (m *IPPacket_Raw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPPacket_Raw.Merge(m, src)
}
func (m *IPPacket_Raw) XXX_Size() int {
	return xxx_messageInfo_IPPacket_Raw.Size(m)
}
func (m *IPPacket_Raw) XXX_DiscardUnknown() {
	xxx_messageInfo_IPPacket_Raw.DiscardUnknown(m)
}

var xxx_messageInfo_IPPacket_Raw proto.InternalMessageInfo

func (m *IPPacket_Raw) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

type IPPacket_Vpn struct {
	VpnAssignedIp        []byte   `protobuf:"bytes,1,opt,name=vpn_assigned_ip,json=vpnAssignedIp,proto3" json:"vpn_assigned_ip,omitempty"`
	VpnGateway           []byte   `protobuf:"bytes,2,opt,name=vpn_gateway,json=vpnGateway,proto3" json:"vpn_gateway,omitempty"`
	VpnSubnetIp          []byte   `protobuf:"bytes,3,opt,name=vpn_subnet_ip,json=vpnSubnetIp,proto3" json:"vpn_subnet_ip,omitempty"`
	VpnSubnetMask        []byte   `protobuf:"bytes,4,opt,name=vpn_subnet_mask,json=vpnSubnetMask,proto3" json:"vpn_subnet_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPPacket_Vpn) Reset()         { *m = IPPacket_Vpn{} }
func (m *IPPacket_Vpn) String() string { return proto.CompactTextString(m) }
func (*IPPacket_Vpn) ProtoMessage()    {}
func (*IPPacket_Vpn) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{0, 1}
}

func (m *IPPacket_Vpn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPPacket_Vpn.Unmarshal(m, b)
}
func (m *IPPacket_Vpn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPPacket_Vpn.Marshal(b, m, deterministic)
}
func (m *IPPacket_Vpn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPPacket_Vpn.Merge(m, src)
}
func (m *IPPacket_Vpn) XXX_Size() int {
	return xxx_messageInfo_IPPacket_Vpn.Size(m)
}
func (m *IPPacket_Vpn) XXX_DiscardUnknown() {
	xxx_messageInfo_IPPacket_Vpn.DiscardUnknown(m)
}

var xxx_messageInfo_IPPacket_Vpn proto.InternalMessageInfo

func (m *IPPacket_Vpn) GetVpnAssignedIp() []byte {
	if m != nil {
		return m.VpnAssignedIp
	}
	return nil
}

func (m *IPPacket_Vpn) GetVpnGateway() []byte {
	if m != nil {
		return m.VpnGateway
	}
	return nil
}

func (m *IPPacket_Vpn) GetVpnSubnetIp() []byte {
	if m != nil {
		return m.VpnSubnetIp
	}
	return nil
}

func (m *IPPacket_Vpn) GetVpnSubnetMask() []byte {
	if m != nil {
		return m.VpnSubnetMask
	}
	return nil
}

type AuthRequest struct {
	AuthType             AuthType                  `protobuf:"varint,1,opt,name=auth_type,json=authType,proto3,enum=vpn.AuthType" json:"auth_type,omitempty"`
	GoogleOpenId         *AuthRequest_GoogleOpenID `protobuf:"bytes,2,opt,name=google_open_id,json=googleOpenId,proto3" json:"google_open_id,omitempty"`
	AwsIam               *AuthRequest_AwsIam       `protobuf:"bytes,3,opt,name=aws_iam,json=awsIam,proto3" json:"aws_iam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{1}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetAuthType() AuthType {
	if m != nil {
		return m.AuthType
	}
	return AuthType_AT_NONE
}

func (m *AuthRequest) GetGoogleOpenId() *AuthRequest_GoogleOpenID {
	if m != nil {
		return m.GoogleOpenId
	}
	return nil
}

func (m *AuthRequest) GetAwsIam() *AuthRequest_AwsIam {
	if m != nil {
		return m.AwsIam
	}
	return nil
}

type AuthRequest_GoogleOpenID struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest_GoogleOpenID) Reset()         { *m = AuthRequest_GoogleOpenID{} }
func (m *AuthRequest_GoogleOpenID) String() string { return proto.CompactTextString(m) }
func (*AuthRequest_GoogleOpenID) ProtoMessage()    {}
func (*AuthRequest_GoogleOpenID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{1, 0}
}

func (m *AuthRequest_GoogleOpenID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest_GoogleOpenID.Unmarshal(m, b)
}
func (m *AuthRequest_GoogleOpenID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest_GoogleOpenID.Marshal(b, m, deterministic)
}
func (m *AuthRequest_GoogleOpenID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest_GoogleOpenID.Merge(m, src)
}
func (m *AuthRequest_GoogleOpenID) XXX_Size() int {
	return xxx_messageInfo_AuthRequest_GoogleOpenID.Size(m)
}
func (m *AuthRequest_GoogleOpenID) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest_GoogleOpenID.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest_GoogleOpenID proto.InternalMessageInfo

type AuthRequest_AwsIam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest_AwsIam) Reset()         { *m = AuthRequest_AwsIam{} }
func (m *AuthRequest_AwsIam) String() string { return proto.CompactTextString(m) }
func (*AuthRequest_AwsIam) ProtoMessage()    {}
func (*AuthRequest_AwsIam) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{1, 1}
}

func (m *AuthRequest_AwsIam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest_AwsIam.Unmarshal(m, b)
}
func (m *AuthRequest_AwsIam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest_AwsIam.Marshal(b, m, deterministic)
}
func (m *AuthRequest_AwsIam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest_AwsIam.Merge(m, src)
}
func (m *AuthRequest_AwsIam) XXX_Size() int {
	return xxx_messageInfo_AuthRequest_AwsIam.Size(m)
}
func (m *AuthRequest_AwsIam) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest_AwsIam.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest_AwsIam proto.InternalMessageInfo

type AuthResponse struct {
	ErrorCode            ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=vpn.ErrorCode" json:"error_code,omitempty"`
	Jwt                  string    `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5388497a7dcc3b7, []int{2}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_EC_UNKNOWN
}

func (m *AuthResponse) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func init() {
	proto.RegisterEnum("vpn.AuthType", AuthType_name, AuthType_value)
	proto.RegisterEnum("vpn.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("vpn.IPPacketType", IPPacketType_name, IPPacketType_value)
	proto.RegisterType((*IPPacket)(nil), "vpn.IPPacket")
	proto.RegisterType((*IPPacket_Raw)(nil), "vpn.IPPacket.Raw")
	proto.RegisterType((*IPPacket_Vpn)(nil), "vpn.IPPacket.Vpn")
	proto.RegisterType((*AuthRequest)(nil), "vpn.AuthRequest")
	proto.RegisterType((*AuthRequest_GoogleOpenID)(nil), "vpn.AuthRequest.GoogleOpenID")
	proto.RegisterType((*AuthRequest_AwsIam)(nil), "vpn.AuthRequest.AwsIam")
	proto.RegisterType((*AuthResponse)(nil), "vpn.AuthResponse")
}

func init() { proto.RegisterFile("vpn-struct.proto", fileDescriptor_b5388497a7dcc3b7) }

var fileDescriptor_b5388497a7dcc3b7 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x5f, 0x6f, 0xd3, 0x3c,
	0x14, 0xc6, 0x97, 0xe6, 0xd5, 0xd6, 0x9e, 0x64, 0x9d, 0xe7, 0x57, 0x68, 0x55, 0x05, 0x62, 0xea,
	0x05, 0x9a, 0x8a, 0x56, 0x41, 0xb9, 0x47, 0xb2, 0xd2, 0xa8, 0x18, 0xb6, 0xa4, 0x72, 0xb2, 0x16,
	0x21, 0x21, 0xcb, 0x5b, 0xad, 0xae, 0x8c, 0x39, 0xa6, 0x49, 0x1b, 0xed, 0xab, 0xf0, 0x91, 0xf8,
	0x4e, 0x48, 0x28, 0x4e, 0xd2, 0x55, 0xc0, 0x0d, 0x57, 0x39, 0xe7, 0xe4, 0xf7, 0x9c, 0xe3, 0xc7,
	0x7f, 0x00, 0x6d, 0xb4, 0x3a, 0x4f, 0xb3, 0xd5, 0xfa, 0x26, 0x1b, 0xe8, 0x55, 0x92, 0x25, 0xd8,
	0xde, 0x68, 0xd5, 0xfb, 0xd9, 0x80, 0x26, 0x9d, 0x4c, 0xc4, 0xcd, 0x9d, 0xcc, 0xf0, 0x39, 0x80,
	0x5c, 0xad, 0x92, 0x15, 0xbf, 0x49, 0xe6, 0xb2, 0x63, 0x9d, 0x5a, 0x67, 0xed, 0x61, 0x7b, 0xb0,
	0xd1, 0x6a, 0xe0, 0x17, 0x65, 0x2f, 0x99, 0x4b, 0xd6, 0x92, 0x75, 0x88, 0x87, 0xe0, 0x68, 0x23,
	0xe4, 0xd9, 0x83, 0x96, 0x9d, 0x86, 0xe1, 0x8f, 0x0d, 0x5f, 0xb7, 0x8c, 0x1f, 0xb4, 0x64, 0xa0,
	0xb7, 0x31, 0x7e, 0x09, 0x07, 0x65, 0xf6, 0xba, 0x03, 0xa7, 0xd6, 0x99, 0xf3, 0x1b, 0x3f, 0x60,
	0x22, 0x67, 0x35, 0xf1, 0x08, 0x0f, 0x3b, 0xce, 0xdf, 0xe0, 0xa9, 0x56, 0x35, 0x3c, 0xec, 0x9e,
	0x80, 0xcd, 0x44, 0x8e, 0x11, 0xd8, 0x2b, 0x91, 0x9b, 0xc5, 0xbb, 0xac, 0x08, 0xbb, 0xdf, 0x2d,
	0xb0, 0xa7, 0x5a, 0xe1, 0x17, 0x70, 0xb4, 0xd1, 0x8a, 0x8b, 0x34, 0x5d, 0x2e, 0x94, 0x9c, 0xf3,
	0xa5, 0xae, 0xa8, 0xc3, 0x8d, 0x56, 0xa4, 0xaa, 0x52, 0x8d, 0x9f, 0x83, 0x53, 0x70, 0x0b, 0x91,
	0xc9, 0x5c, 0x3c, 0x18, 0x5b, 0x2e, 0x83, 0x8d, 0x56, 0xe3, 0xb2, 0x82, 0x7b, 0x50, 0x28, 0x78,
	0xba, 0xbe, 0x56, 0x32, 0x2b, 0xda, 0xd8, 0x06, 0x29, 0x54, 0x91, 0xa9, 0x51, 0x5d, 0x0f, 0xab,
	0x98, 0x7b, 0x91, 0xde, 0x75, 0xfe, 0xdb, 0x0e, 0x2b, 0xa9, 0x4b, 0x91, 0xde, 0xf5, 0x7e, 0x58,
	0xe0, 0x90, 0x75, 0x76, 0xcb, 0xe4, 0xb7, 0xb5, 0x4c, 0x33, 0xdc, 0x87, 0x96, 0x58, 0x67, 0xb7,
	0xe5, 0x8e, 0x96, 0x27, 0x70, 0x68, 0x4c, 0x17, 0x90, 0xd9, 0xcd, 0xa6, 0xa8, 0x22, 0xec, 0x41,
	0x7b, 0x91, 0x24, 0x8b, 0xaf, 0x92, 0x27, 0x5a, 0x2a, 0xbe, 0x9c, 0x9b, 0xb5, 0x3a, 0xc3, 0x67,
	0x5b, 0x41, 0xd5, 0x75, 0x30, 0x36, 0x58, 0xa8, 0xa5, 0xa2, 0x23, 0xe6, 0x2e, 0x1e, 0xb3, 0x39,
	0x7e, 0x05, 0x07, 0x22, 0x4f, 0xf9, 0x52, 0xdc, 0x1b, 0x1b, 0xce, 0xf0, 0xe4, 0x0f, 0x35, 0xc9,
	0x53, 0x2a, 0xee, 0xd9, 0xbe, 0x30, 0xdf, 0x6e, 0x1b, 0xdc, 0xdd, 0x7e, 0xdd, 0x26, 0xec, 0x97,
	0x44, 0x2f, 0x04, 0xb7, 0xd4, 0xa5, 0x3a, 0x51, 0xa9, 0xfc, 0xd7, 0xfb, 0x84, 0xc0, 0xfe, 0x92,
	0x67, 0xc6, 0x44, 0x8b, 0x15, 0x61, 0xff, 0x2d, 0x34, 0x6b, 0xdf, 0xd8, 0x81, 0x03, 0x12, 0xf3,
	0x20, 0x0c, 0x7c, 0xb4, 0x87, 0x9f, 0xc0, 0x31, 0x89, 0xf9, 0x38, 0x0c, 0xc7, 0x17, 0x3e, 0x0f,
	0x27, 0x7e, 0xc0, 0xe9, 0x08, 0x59, 0xb8, 0x0d, 0x40, 0x62, 0x4e, 0x66, 0x11, 0xa7, 0xe4, 0x12,
	0x35, 0xfa, 0x9f, 0xa1, 0xb5, 0x9d, 0x54, 0xfc, 0xf4, 0x3d, 0x7e, 0x15, 0x7c, 0x08, 0xc2, 0x59,
	0x80, 0xf6, 0xaa, 0x3c, 0xba, 0xf2, 0x3c, 0x3f, 0x8a, 0x90, 0x85, 0x9f, 0x42, 0xc7, 0xf7, 0x38,
	0x0d, 0xa6, 0xe4, 0x82, 0x8e, 0x38, 0xb9, 0x8a, 0xdf, 0x85, 0x8c, 0x7e, 0x22, 0x31, 0x0d, 0x03,
	0xd4, 0xc0, 0x18, 0xda, 0xbe, 0xc7, 0xfd, 0x8f, 0x13, 0xca, 0xfc, 0x11, 0x7f, 0x3f, 0x8b, 0x91,
	0xdd, 0xf7, 0xc0, 0xdd, 0xbd, 0xe8, 0x18, 0x99, 0x3c, 0xde, 0x99, 0xe1, 0x9a, 0xd7, 0x15, 0x73,
	0x46, 0x66, 0xc8, 0xc2, 0xff, 0xc3, 0x91, 0xc9, 0xa6, 0x93, 0x80, 0x93, 0x28, 0xa2, 0xe3, 0x00,
	0x35, 0xae, 0xf7, 0xcd, 0x6b, 0x7c, 0xf3, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x85, 0xc9, 0x6c, 0x88,
	0xa1, 0x03, 0x00, 0x00,
}
